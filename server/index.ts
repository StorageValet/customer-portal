import express from 'express';
import path from 'path';
import cors from 'cors';
import helmet from 'helmet';
import compression from 'compression';
import cookieParser from 'cookie-parser';
import { mountSession } from './session';
import authRouter from './routes/auth-routes-v7';
import stripeWebhookHandler from './routes/stripe-webhook';
import { listItemsForCustomerRecord, findCustomerByEmail } from './airtable-v7';
const app = express();
const FRONTEND_URL = process.env.FRONTEND_URL || 'http://localhost:5173';
app.set('trust proxy', 1);
app.post('/api/webhooks/stripe', express.raw({ type: 'application/json' }), stripeWebhookHandler);
app.use(helmet());
app.use(compression());
app.use(cors({ origin: FRONTEND_URL, credentials: true }));
app.use(cookieParser());
app.use(express.json({ limit: '1mb' }));
mountSession(app);
app.use('/api/auth', authRouter);
app.get('/api/items', async (req: any, res) => {
  const user = req.session?.user;
  if (!user?.email) return res.status(401).json({ error: 'not_authenticated' });
  const cust = await findCustomerByEmail(user.email);
  if (!cust) return res.json([]);
  const data = await listItemsForCustomerRecord(cust.id);
  res.json(data);
});
app.use('/api', (_req, res) => res.status(404).json({ error: 'not_found' }));
const clientDist = path.join(process.cwd(), 'client', 'dist');
app.use(express.static(clientDist));
app.get('*', (_req, res) => res.sendFile(path.join(clientDist, 'index.html')));
const port = Number(process.env.PORT || 3000);
app.listen(port, () => console.log(`Server listening on ${port}`));
